basePath: /api/v1
definitions:
  dto.AlbumResponse:
    properties:
      artist:
        example: Joshua David
        type: string
      id:
        example: 1
        type: integer
      price:
        example: 39.99
        type: number
      title:
        example: Blue Train
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: joshuadavidang@outlook.sg
    name: Joshua
    url: https://joshydavid.com
  description: API documentation for Music Album service
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Music Album API
  version: "1.0"
paths:
  /albums:
    get:
      consumes:
      - application/json
      description: Retrieves a list of all music albums from the collection.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.AlbumResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List all albums
      tags:
      - albums
    post:
      consumes:
      - application/json
      description: Creates and stores a new music album record.
      parameters:
      - description: Album object to be created
        in: body
        name: album
        required: true
        schema:
          $ref: '#/definitions/dto.AlbumResponse'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.AlbumResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Add a new album
      tags:
      - albums
  /albums/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a single music album record by its unique ID.
      parameters:
      - description: Album ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Album not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete an album
      tags:
      - albums
    get:
      consumes:
      - application/json
      description: Retrieve a single music album by its unique ID.
      parameters:
      - description: Album ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.AlbumResponse'
        "404":
          description: Album not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get album by ID
      tags:
      - albums
swagger: "2.0"
